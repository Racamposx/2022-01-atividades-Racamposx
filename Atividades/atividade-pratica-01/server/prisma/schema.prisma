generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cidade {
  cidadeId     Int            @id @default(autoincrement())
  nome         String         @unique @db.VarChar(45)
  estadoId     Int
  criadoEm     DateTime?      @default(now())
  atualizadoEm DateTime?      @updatedAt
  estado       estado         @relation(fields: [estadoId], references: [idEstado], onDelete: NoAction, onUpdate: NoAction, map: "estadoId")
  local_coleta local_coleta[]
  pessoa       pessoa[]
  unidade      unidade[]

  @@index([estadoId], map: "estadoId_idx")
}

model distribuicao {
  distribuicaoId Int       @id @default(autoincrement())
  produtoId      Int
  unidadeId      Int
  data           DateTime  @db.DateTime(0)
  criadoEm       DateTime? @default(now())
  atualizadoEm   DateTime? @updatedAt
  produto        produto   @relation(fields: [produtoId], references: [produtoId], onDelete: Cascade, onUpdate: NoAction, map: "produtoId")
  unidade        unidade   @relation(fields: [unidadeId], references: [unidadeId], onDelete: NoAction, onUpdate: NoAction, map: "unidadeId")

  @@index([produtoId], map: "produtoId_idx")
  @@index([unidadeId], map: "unidadeId_idx")
}

model doacao {
  doacaoId     Int          @id @default(autoincrement())
  pessoaId     Int
  localId      Int
  data         DateTime?    @db.DateTime(0)
  criadoEm     DateTime?    @default(now())
  atualizadoEm DateTime?    @updatedAt
  local_coleta local_coleta @relation(fields: [localId], references: [idlocal_coleta], onDelete: NoAction, onUpdate: NoAction, map: "localId")
  pessoa       pessoa       @relation(fields: [pessoaId], references: [idpessoa], onDelete: Cascade, onUpdate: NoAction, map: "pessoaId")
  produto      produto[]

  @@index([localId], map: "localId_idx")
  @@index([pessoaId], map: "pessoaId_idx")
}

model estado {
  idEstado     Int       @id @default(autoincrement())
  nome         String    @unique @db.VarChar(25)
  sigla        String    @db.VarChar(2)
  criadoEm     DateTime? @default(now())
  AtualizadoEm DateTime? @updatedAt
  cidade       cidade[]
}

model local_coleta {
  idlocal_coleta Int       @id @default(autoincrement()) @map("idlocal-coleta")
  cidadeId       Int
  nome           String    @unique @db.VarChar(45)
  rua            String    @db.VarChar(45)
  numero         String    @db.VarChar(4)
  complemento    String    @db.VarChar(45)
  criadoEm       DateTime? @default(now())
  atualizadoEm   DateTime? @updatedAt
  cidade         cidade    @relation(fields: [cidadeId], references: [cidadeId], onDelete: NoAction, onUpdate: NoAction, map: "cidadeId")
  doacao         doacao[]

  @@index([cidadeId], map: "cidadeId_idx")
}

model pessoa {
  idpessoa       Int            @id @default(autoincrement())
  cidadeId       Int
  tipoId         Int
  nome           String         @unique @db.VarChar(45)
  rua            String         @db.VarChar(45)
  numero         String         @db.VarChar(4)
  complemento    String?        @db.VarChar(45)
  documento      String?        @db.VarChar(15)
  criadoEm       DateTime?      @default(now())
  atualizadoEm   DateTime?      @updatedAt
  cidade         cidade         @relation(fields: [cidadeId], references: [cidadeId], onDelete: NoAction, onUpdate: NoAction, map: "cidade-id")
  tipo_sanguineo tipo_sanguineo @relation(fields: [tipoId], references: [tipoId], onDelete: NoAction, onUpdate: NoAction, map: "tipoId")
  doacao         doacao[]

  @@index([cidadeId], map: "pessoa_ibfk_1_idx")
  @@index([tipoId], map: "tipoId_idx")
}

model produto {
  produtoId    Int            @id @default(autoincrement())
  doacaoId     Int
  etiqueta     String         @db.VarChar(45)
  validade     DateTime       @db.DateTime(0)
  criadoEm     DateTime?      @default(now())
  atualizadoEm DateTime?      @updatedAt
  doacao       doacao         @relation(fields: [doacaoId], references: [doacaoId], onDelete: Cascade, onUpdate: NoAction, map: "doacaoId")
  distribuicao distribuicao[]

  @@index([doacaoId], map: "doacaoId_idx")
}

model tipo_sanguineo {
  tipoId       Int       @id @default(autoincrement())
  tipo         String    @unique @db.VarChar(2)
  fator        String    @db.VarChar(10)
  criadoEm     DateTime? @default(now())
  atualizadoEm DateTime? @updatedAt
  pessoa       pessoa[]
}

model unidade {
  unidadeId    Int            @id @default(autoincrement())
  cidadeId     Int
  nome         String         @unique @db.VarChar(45)
  numero       String         @db.VarChar(4)
  complemento  String?        @db.VarChar(45)
  criadoEm     DateTime?      @default(now())
  atualizadoEm DateTime?      @updatedAt
  cidade       cidade         @relation(fields: [cidadeId], references: [cidadeId], onDelete: NoAction, onUpdate: NoAction, map: "cidad_id")
  distribuicao distribuicao[]

  @@index([cidadeId], map: "cidadeId_idx")
}
